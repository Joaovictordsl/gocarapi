// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: query.sql

package test

import (
	"context"
)

const createCarro = `-- name: CreateCarro :one
INSERT INTO CARROS (marca, modelo, preco) VALUES ($1, $2, $3) RETURNING id, marca, modelo, preco, created
`

type CreateCarroParams struct {
	Marca  string
	Modelo string
	Preco  string
}

func (q *Queries) CreateCarro(ctx context.Context, arg CreateCarroParams) (Carro, error) {
	row := q.db.QueryRowContext(ctx, createCarro, arg.Marca, arg.Modelo, arg.Preco)
	var i Carro
	err := row.Scan(
		&i.ID,
		&i.Marca,
		&i.Modelo,
		&i.Preco,
		&i.Created,
	)
	return i, err
}

const getCarro = `-- name: GetCarro :one
SELECT id, marca, modelo, preco, created FROM CARROS WHERE id = $1 LIMIT 1
`

func (q *Queries) GetCarro(ctx context.Context, id int32) (Carro, error) {
	row := q.db.QueryRowContext(ctx, getCarro, id)
	var i Carro
	err := row.Scan(
		&i.ID,
		&i.Marca,
		&i.Modelo,
		&i.Preco,
		&i.Created,
	)
	return i, err
}

const getCarroByMarca = `-- name: GetCarroByMarca :many
SELECT id, marca, modelo, preco, created FROM CARROS WHERE marca = $1
`

func (q *Queries) GetCarroByMarca(ctx context.Context, marca string) ([]Carro, error) {
	rows, err := q.db.QueryContext(ctx, getCarroByMarca, marca)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Carro
	for rows.Next() {
		var i Carro
		if err := rows.Scan(
			&i.ID,
			&i.Marca,
			&i.Modelo,
			&i.Preco,
			&i.Created,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const listCarros = `-- name: ListCarros :many
SELECT id, marca, modelo, preco, created FROM CARROS ORDER BY marca
`

func (q *Queries) ListCarros(ctx context.Context) ([]Carro, error) {
	rows, err := q.db.QueryContext(ctx, listCarros)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Carro
	for rows.Next() {
		var i Carro
		if err := rows.Scan(
			&i.ID,
			&i.Marca,
			&i.Modelo,
			&i.Preco,
			&i.Created,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
